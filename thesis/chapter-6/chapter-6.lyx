#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\options openright
\use_default_options false
\master ../thesis.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
All things explained in the previous chapters are considered implicit.
\end_layout

\begin_layout Standard
6.1 which tests done
\end_layout

\begin_layout Standard
6.2 how to do them
\end_layout

\begin_layout Standard
6.3 on whcih data
\end_layout

\begin_layout Section
Scaling test
\end_layout

\begin_layout Standard
In this section we will see what we have to do to tests scaling of different
 solutions.
\end_layout

\begin_layout Standard
We will analyze the scaling that we will do and reasons of that choices
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Scaling-tests"

\end_inset

.
\begin_inset Newline newline
\end_inset

Then we will see different tests environments based on previous choices
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Environments-test"

\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Scaling-tests"

\end_inset

Scaling
\end_layout

\begin_layout Standard
We know that NoSQL databases implements partitioning very efficiently 
\begin_inset CommandInset citation
LatexCommand cite
key "NoSQL"

\end_inset

.
 So we expect that with a lot of data that requires partitioning the performance
 of NoSQL solutions would be a lot better than traditional approach.
\begin_inset Newline newline
\end_inset

Moreover since, often, strong consistency constraints are relaxed, also
 the replication is more efficiently.
\begin_inset Newline newline
\end_inset

Booth things bring to have horizontal scalability (also called out/in) 
\begin_inset CommandInset citation
LatexCommand cite
key "Scaling"

\end_inset

, since we increase the number of servers (not things like the power of
 them).
\begin_inset Newline newline
\end_inset

Furthermore, since NoSQL 
\begin_inset Quotes fld
\end_inset

realtime
\begin_inset Quotes frd
\end_inset

 database are a full stack solution, also the internal realtime delivery
 server is scaled horizontally (it is scaled with the database).
\end_layout

\begin_layout Standard
So to keep a simplicity, make standard things (partition is implemented
 in different ways based on the data model) and to avoid to add an additional
 level to test, we decided to skip this part.
 So we test without horizontal scaling.
\begin_inset Newline newline
\end_inset

Moreover, since our topic is compare these kind of applications with a standard
 approach, if we test also the horizontal scaling we add another variable
 factor that can change our results.
\begin_inset Newline newline
\end_inset

For the same reason we do not scale horizontally the traditional approach
 that we proposed.
 Here the scaling means: partitioning and replication of postgreSQL server
 and replication of socket.io machines, redis is not a bottleneck so it does
 not need scaling.
\end_layout

\begin_layout Standard
But we will do a vertically scaling (also called up/down) 
\begin_inset CommandInset citation
LatexCommand cite
key "Scaling"

\end_inset

 that we will explain in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Environments-test"

\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Environments-test"

\end_inset

Environments
\end_layout

\begin_layout Standard
As we said in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Scaling-tests"

\end_inset

, we do only vertical scaling.
 So in this section we shows that different configurations that we want
 to test.
\begin_inset Newline newline
\end_inset

These configurations were found after some minor empirical tests.
 We have also set them to have the same maximum and minimum sum of resources
 used (counting not static servers).
\end_layout

\begin_layout Standard
As said previously the NoSQL 
\begin_inset Quotes fld
\end_inset

realtime
\begin_inset Quotes frd
\end_inset

 database are a full stack solution implement in just one server.
 So we can create a common environment for them, shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:NoSQL-realtime-databases-test"

\end_inset

.
\begin_inset Newline newline
\end_inset

While on traditional approach proposed we have different servers.
 So they need an advanced discussion, shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Traditional-approach-test"

\end_inset

.
\end_layout

\begin_layout Standard
To keep things more generally all tests are done using virtual machines
 (using virtualbox 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.virtualbox.org
\end_layout

\end_inset


\end_layout

\end_inset

)
\begin_inset CommandInset citation
LatexCommand cite
key "Virtualization"

\end_inset

 on the same physical machine.
 So all components and technical characteristics are the same (such as RAM
 speed).
\series bold

\begin_inset Newline newline
\end_inset

Note
\series default
: with CPU we means a standard modern CPU (i7 generation), of course for
 all servers the same CPU was used.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:NoSQL-realtime-databases-test"

\end_inset

NoSQL 
\begin_inset Quotes fld
\end_inset

realtime
\begin_inset Quotes frd
\end_inset

 databases
\end_layout

\begin_layout Standard
Since we have only on server we can simply follow the table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:NoSQL-realtime-database-envs"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:NoSQL-realtime-database-envs"

\end_inset

NoSQL 
\begin_inset Quotes fld
\end_inset

realtime
\begin_inset Quotes frd
\end_inset

 database test environments
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N°
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
RAM [GB]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N° CPU
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Traditional-approach-test"

\end_inset

Traditional approach
\end_layout

\begin_layout Standard
Here we have 4 servers, for each of them we use a virtual machine:
\end_layout

\begin_layout Itemize
PostgreSQL: this is a critical point and we will follow table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:postgresql-test"

\end_inset

.
\end_layout

\begin_layout Itemize
Redis: this is not a critical point, it is not also a thing to test.
 So we can consider it static, we use always a machine with 1CPU and 4GB
 RAM.
\end_layout

\begin_layout Itemize
Listener: this is not a critical point, it is not also a thing to test.
 So we can consider it static, we use always a machine with 1CPU and 2GB
 RAM.
\end_layout

\begin_layout Itemize
socket.io: this is a critical point and we will follow table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:socketio-test"

\end_inset

.
\begin_inset Newline newline
\end_inset

Socket.io could be considered monothread so we do not scale the CPU.
 In fact we have a main thread where execute callbacks and other operations,
 furthermore background operations (executed in other threads) in case of
 network delivery (background operations used by socket.io) are not CPU intensive
 
\begin_inset CommandInset citation
LatexCommand cite
key "NodeEventDriven"

\end_inset

.
\end_layout

\begin_layout Standard
Of course we have to test all combinations: so we have 8 tests to do.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:postgresql-test"

\end_inset

postgreSQL (traditional approach) test environments
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N°
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
RAM [GB]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N° CPU
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:socketio-test"

\end_inset

socket.io (traditional approach) test environments
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N°
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
RAM [GB]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N° CPU
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Test Framework
\end_layout

\begin_layout Standard
Since the systems used are custom or are new there are no stable frameworks
 to test the performance of them.
 So we started taking the approach, from one used and customizable framework
 called 
\begin_inset Quotes fld
\end_inset

jepsen
\begin_inset Quotes frd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "JepsenTool"

\end_inset

, we realized our framework, that tests only what we need.
 The framework with tests prepared (and related things like SQL tables)
 could be found on github 
\series bold
TODO
\series default
 with instructions on the readme.
\end_layout

\begin_layout Standard
We will quickly analyze the jepsenframework 
\series bold
IN TODO
\end_layout

\begin_layout Standard

\series bold
TODO transfer example not useful for us btu the idea is useful
\end_layout

\begin_layout Subsection
Jepsen framework
\end_layout

\begin_layout Standard
We execute jepsen framework to test a postgreSQL server deployed in a virtual
 machine with 4 GB RAM and 1 CPU (of course on the same physical machine
 of the other tests).
\begin_inset Newline newline
\end_inset

The test used was the standard Jepsen postgreSQL test 
\begin_inset CommandInset citation
LatexCommand cite
key "JepsenPostgreTool,JepsenPostgreExplanation"

\end_inset

, it emulates simultaneous bank transfers and 
\begin_inset Quotes fld
\end_inset

raw read
\begin_inset Quotes frd
\end_inset

 of accounts.
 It considers a fail when it is not possible executes a transfer, since
 there is a negative amount (i.e.
 other transfers in the meanwhile)
\begin_inset Newline newline
\end_inset

The results obtained are shown as charts in figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-latency-raw"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-latency-quantiles"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-rate"

\end_inset

.
 In the charts also the fails of reads are shown, even if they are 0, 
\begin_inset Quotes fld
\end_inset

transfer info
\begin_inset Quotes frd
\end_inset

 is the time required to check amount before do the transfer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/jepsen/latency-raw.png
	width 70col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Jepsen-latency-raw"

\end_inset

Jepsen latency raw
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/jepsen/latency-quantiles.png
	width 70col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Jepsen-latency-quantiles"

\end_inset

Jepsen latency quantiles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/jepsen/rate.png
	width 70col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Jepsen-rate"

\end_inset

Jepsen rate
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can see that tests do a lot of transfers and reads for some seconds.
\end_layout

\begin_layout Standard
In charts we have the measures for every operation (or some of them) for
 every second of the test (or 
\begin_inset Quotes fld
\end_inset

chunks
\begin_inset Quotes frd
\end_inset

 of seconds), the measures that we have are:
\end_layout

\begin_layout Itemize
Time (latency) needed to do operation, shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-latency-raw"

\end_inset

.
\end_layout

\begin_layout Itemize
Time (latency) needed to do operation with quantiles, shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-latency-quantiles"

\end_inset

.
\end_layout

\begin_layout Itemize
Throughput of every operation, shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Jepsen-rate"

\end_inset

.
\end_layout

\begin_layout Subsection
Custom framework
\end_layout

\begin_layout Standard
The framework realized by us is done in javascript, so it is easy to integrate
 it with other platform.
 Since we know which are the measures that we need, we have just to implement
 in a general way:
\end_layout

\begin_layout Itemize
Generator of data, according to the data structure.
 It is shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tests-to-do-test"

\end_inset

.
\end_layout

\begin_layout Itemize
Client, general client that allow to send data and to read local database
 (or receive data).
 It is shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Adapters-for-systems-test"

\end_inset

.
\end_layout

\begin_layout Standard
What we need to tests are write and read performance.
\begin_inset Newline newline
\end_inset

So test throughput and latency, as done by 
\begin_inset Quotes fld
\end_inset

jepsen
\begin_inset Quotes frd
\end_inset

, is a good model, in fact we will use the same charts used by 
\begin_inset Quotes fld
\end_inset

jepsen
\begin_inset Quotes frd
\end_inset

.
 The framework, sinec it is not a general framework, do not generate charts,
 it only generate raw data, charts can be generate using external and powerful
 instruments like sheet software.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tests-to-do-test"

\end_inset

Tests to do
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Adapters-for-systems-test"

\end_inset

Adapters for systems
\end_layout

\begin_layout Section
Analysis of the results
\end_layout

\end_body
\end_document
