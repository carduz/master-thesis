#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\options openright
\use_default_options false
\master ../thesis.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Realtime databases
\end_layout

\begin_layout Subsection
CouchBase
\end_layout

\begin_layout Subsubsection
Configurations
\end_layout

\begin_layout Paragraph
\begin_inset CommandInset label
LatexCommand label
name "par:SyncGateway"

\end_inset

SyncGateway
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},breaklines=true,commentstyle={\color{purple!60!black}},extendedchars=true,identifierstyle={\color{blue!50!black}},keywordstyle={\bfseries\color{green!50!black}},language=JavaScript,numbers=left,numberstyle={\footnotesize},showstringspaces=false,stringstyle={\color{orange!40!black}},tabsize=4,xleftmargin=2em"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:SyncGateway-configuration"

\end_inset

SyncGateway configuration
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

{   
\end_layout

\begin_layout Plain Layout

	"interface": ":4984",
\end_layout

\begin_layout Plain Layout

	"adminInterface": ":4985",
\end_layout

\begin_layout Plain Layout

	"log": ["REST"],
\end_layout

\begin_layout Plain Layout

	"databases": {
\end_layout

\begin_layout Plain Layout

		"default": {
\end_layout

\begin_layout Plain Layout

			"server": "http://localhost:8091",
\end_layout

\begin_layout Plain Layout

			"bucket": "default",
\end_layout

\begin_layout Plain Layout

			"users": { "GUEST": {"disabled": false, "admin_channels": ["*"] } },
\end_layout

\begin_layout Plain Layout

			"sync": `function(doc) {channel(doc.channels);}`
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:appendix-Traditional-Stack"

\end_inset

Traditional Stack
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Configurations"

\end_inset

Configurations
\end_layout

\begin_layout Standard
A lot of code is written in EcmaScript for nodejs, so all libraries are
 NPM decencies.
\end_layout

\begin_layout Subsubsection
Trigger on database
\end_layout

\begin_layout Standard
On the following listing is shown a trigger to send the notification (it
 calls the postgresql NOTIFY command), the function is generic, so you can
 create all triggers that you want for all tables that you want.
 As said in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Database"

\end_inset

 this is inspired to an example found online 
\begin_inset CommandInset citation
LatexCommand cite
key "PostgreNotifyListenExample"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=sh"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Final-Notify-trigger"

\end_inset

Notify trigger
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

CREATE OR REPLACE FUNCTION table_update_notify() RETURNS trigger AS $$
\end_layout

\begin_layout Plain Layout

DECLARE
\end_layout

\begin_layout Plain Layout

  id bigint;
\end_layout

\begin_layout Plain Layout

  old_v TEXT;
\end_layout

\begin_layout Plain Layout

  new_v TEXT;
\end_layout

\begin_layout Plain Layout

BEGIN
\end_layout

\begin_layout Plain Layout

  IF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN
\end_layout

\begin_layout Plain Layout

    id = NEW.id;
\end_layout

\begin_layout Plain Layout

  ELSE
\end_layout

\begin_layout Plain Layout

    id = OLD.id;
\end_layout

\begin_layout Plain Layout

  END IF;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  IF TG_OP = 'INSERT' THEN
\end_layout

\begin_layout Plain Layout

    old_v := '{}';
\end_layout

\begin_layout Plain Layout

 ELSE
\end_layout

\begin_layout Plain Layout

    old_v := (SELECT  ('[' || row_to_json(OLD) || ']')::json ->> 0);
\end_layout

\begin_layout Plain Layout

 END IF;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 IF TG_OP = 'DELETE' THEN
\end_layout

\begin_layout Plain Layout

    new_v := '{}';
\end_layout

\begin_layout Plain Layout

 ELSE
\end_layout

\begin_layout Plain Layout

   new_v := (SELECT  ('[' || row_to_json(NEW) || ']')::json ->> 0);
\end_layout

\begin_layout Plain Layout

 END IF;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 PERFORM pg_notify('table_update', json_build_object('table', TG_TABLE_NAME,
 'old',old_v, 'new', new_v, 'id', id, 'type', TG_OP)::text);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 RETURN NEW;
\end_layout

\begin_layout Plain Layout

END;
\end_layout

\begin_layout Plain Layout

$$ LANGUAGE plpgsql;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CREATE TRIGGER notify_trigger
\end_layout

\begin_layout Plain Layout

AFTER UPDATE INSERT OR UPDATE OR DELETE ON DATA_TABLE
\end_layout

\begin_layout Plain Layout

FOR EACH ROW
\end_layout

\begin_layout Plain Layout

EXECUTE PROCEDURE table_update_notify();
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Database Listener and Event Emitter
\end_layout

\begin_layout Standard
On the following listing is shown the nodejs task that listen the changes
 and send a notification to socket.io using redis.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},breaklines=true,commentstyle={\color{purple!60!black}},extendedchars=true,identifierstyle={\color{blue!50!black}},keywordstyle={\bfseries\color{green!50!black}},language=JavaScript,numbers=left,numberstyle={\footnotesize},showstringspaces=false,stringstyle={\color{orange!40!black}},tabsize=4,xleftmargin=2em"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Database-listener"

\end_inset

Database listener
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

...
\end_layout

\end_inset


\end_layout

\end_body
\end_document
