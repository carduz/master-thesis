#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\options openright
\use_default_options false
\master ../thesis.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Since we will cover only HTTP based application we will start analyzing
 the an HTTP application stack.
 Then we will see how to make it 
\begin_inset Quotes fld
\end_inset

realtime
\begin_inset Quotes frd
\end_inset

 and the limits that are the causes of creation of realtime databases.
\begin_inset Newline newline
\end_inset

Finally we will analyze the realtime databases approach.
\end_layout

\begin_layout Standard
Of course the protocol is not the only element need to build a realtime
 application but it is a must, without a right protocol that allow us to
 receive messages from the server we are not able to build a real realtime
 application.
\end_layout

\begin_layout Section
HTTP Application Stack
\end_layout

\begin_layout Standard
There are a lot of ways to build an Application over HTTP, a web application,
 but all have common parts.
 We will see just one modern approach.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename web-stack.png
	width 90col%
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Modern web application stack
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We will see the evolution of the HTTP that allow to create a real realtime
 application.
 The core of the issue is the HTTP handshake, in fact we need to have asynchrono
us requests, i.e.
 the server should be able to send messages to client at any time.
\end_layout

\begin_layout Subsection
HTTP handshake
\end_layout

\begin_layout Subsubsection
HTTP 1.0
\end_layout

\begin_layout Standard
Original version of HTTP (HTTP 1.0) allowed just connections that must be
 closed immediately after the receiving of data:
\end_layout

\begin_layout Enumerate
The client request something
\end_layout

\begin_layout Enumerate
The server reply
\end_layout

\begin_layout Enumerate
The connection is closed
\end_layout

\begin_layout Standard

\series bold
TODO INSERT IMAGE
\end_layout

\begin_layout Standard
In this version the only approaches available to build a realtime application
 are:
\end_layout

\begin_layout Itemize
Short polling: schedule new request every a fixed small amount of time to
 check if the data are changed
\end_layout

\begin_layout Itemize
Long polling: create a normal request to the server.
 But the server reply only when there are new data, then the client create
 a new request
\end_layout

\begin_layout Itemize
Event Stream: a long request without end, where the server continues to
 send data to the client, this approach is used in video/music streaming.
\end_layout

\begin_layout Standard
Booth approaches have a lot of issues that reduce the performances 
\begin_inset CommandInset citation
LatexCommand cite
key "PollingStreamProblems"

\end_inset


\end_layout

\begin_layout Subsubsection
HTTP 1.1
\end_layout

\begin_layout Standard
AAAAALorem ipsum dolor sit amet, consectetur adipiscing elit.
 Quisque lectus mi, aliquet ac lectus at, luctus ornare enim.
 Donec eleifend ornare ante.
 Curabitur non adipiscing risus.
 Vivamus congue sem non magna tristique, ut pellentesque diam ornare.
 Donec eget arcu congue, vulputate nisl et, aliquam tellus.
 Morbi tincidunt odio quis mi hendrerit aliquet sit amet sit amet lorem.
 Donec fringilla nec lectus nec lacinia.
 Aliquam eu nunc euismod, tempus neque in, consequat velit.
 Duis arcu quam, convallis quis ultricies vitae, semper in est.
 Aliquam congue sagittis tortor, eget blandit lorem ullamcorper id.
 Maecenas venenatis nec neque in consectetur.
 Nulla nisl turpis, elementum a enim interdum, tincidunt vehicula tortor.
 Praesent pulvinar mi sit amet condimentum placerat.
 Curabitur mollis libero non auctor condimentum.
 Suspendisse ante lectus, sodales vel mauris vel, pharetra laoreet eros.
\end_layout

\begin_layout Standard
Nam lacinia nunc lorem, adipiscing ornare purus semper sit amet.
 Morbi elementum augue vitae purus vehicula, ac varius leo sagittis.
 Vestibulum eu orci in ipsum suscipit posuere.
 Nulla quis erat rhoncus risus rutrum venenatis vel at lectus.
 Vivamus pharetra tempor rhoncus.
 Proin vitae turpis vitae lacus ultrices lacinia eu ac nunc.
 Morbi id metus purus.
 Pellentesque facilisis at arcu ut adipiscing.
 Etiam eu nisi hendrerit, congue orci non, vehicula orci.
 Interdum et malesuada fames ac ante ipsum primis in faucibus.
 Aenean porttitor eu velit sed pulvinar.
 Class aptent taciti sociosqu ad litora torquent per conubia nostra, per
 inceptos himenaeos.
 Maecenas ut pretium nisi, nec aliquam massa.
 Maecenas vitae rhoncus lacus, non tempus turpis.
\end_layout

\begin_layout Standard
Nam luctus in nisi dignissim congue.
 Nullam dapibus dui sed ligula euismod congue.
 Nulla vestibulum, justo a feugiat porttitor, massa nunc molestie lectus,
 ultrices tempus turpis massa posuere augue.
 Phasellus pulvinar vulputate ipsum, et eleifend sapien mollis vel.
 Sed vitae eros id sapien dictum ultricies.
 Aliquam ultricies nisl et bibendum imperdiet.
 Cras a sem eros.
 Quisque ut mauris a libero hendrerit tincidunt ac ac mi.
 Mauris feugiat est sem, eu malesuada ipsum faucibus id.
 Duis at ante et justo ullamcorper hendrerit sed ut turpis.
 Donec eu dolor ac enim venenatis placerat venenatis vitae velit.
 Curabitur lacus nisi, molestie id ligula vel, congue porta felis.
 Nam eu aliquam justo.
 Mauris sapien nulla, accumsan id eros a, porttitor interdum nunc.
\end_layout

\begin_layout Standard
Vestibulum aliquam et mauris imperdiet consectetur.
 Pellentesque convallis metus dignissim neque tincidunt, egestas commodo
 odio rhoncus.
 Integer purus leo, posuere non leo eget, aliquet condimentum neque.
 Quisque non hendrerit quam.
 Phasellus sit amet neque quam.
 Suspendisse at sollicitudin ante.
 Mauris fermentum turpis eget sem cursus tempor.
 Fusce ac rutrum libero, sed adipiscing diam.
\end_layout

\begin_layout Standard
Praesent quis ultricies diam, in hendrerit nibh.
 Praesent diam dolor, bibendum sit amet pharetra a, viverra vel tortor.
 Mauris id eleifend diam.
 Maecenas tristique est massa, et lacinia ante tristique nec.
 Praesent sapien odio, iaculis sollicitudin tristique vitae, mattis non
 lacus.
 Ut vehicula enim pellentesque, mollis ante vitae, mollis mauris.
 Aenean imperdiet tellus lorem, eget malesuada ante rhoncus id.
 Pellentesque dignissim nisl id pretium condimentum.
 Sed congue commodo massa in rhoncus.
 Phasellus elementum sollicitudin erat id rhoncus.
 Fusce sem nunc, semper at tempor sit amet, congue nec orci.
 Vivamus a egestas dui, vel viverra eros.
 Sed sit amet eros sit amet nisi gravida ullamcorper.
 Nam rutrum in mi sit amet vulputate.
 Aenean pellentesque velit eu nisi eleifend faucibus sit amet vel dui.
 Pellentesque sapien est, auctor at fringilla vel, vehicula ut urna 
\begin_inset CommandInset citation
LatexCommand cite
key "Dijkstra68Letters"

\end_inset

.
\end_layout

\end_body
\end_document
